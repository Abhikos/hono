<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2016 Bosch Software Innovations GmbH.

    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html

    Contributors:
    Bosch Software Innovations GmbH - initial creation
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <parent>
      <groupId>org.eclipse.hono</groupId>
      <artifactId>hono-bom</artifactId>
      <version>0.1-SNAPSHOT</version>
      <relativePath>../bom</relativePath>
   </parent>
   <modelVersion>4.0.0</modelVersion>

   <artifactId>hono-tests</artifactId>

   <properties>
      <qpid-dispatch.version>0.6.0-beta2</qpid-dispatch.version>
      <hono-server.version>${project.version}</hono-server.version>
      <hono-client.version>${project.version}</hono-client.version>
   </properties>

   <dependencies>
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
      </dependency>
      <dependency>
         <groupId>org.eclipse.hono</groupId>
         <artifactId>hono-client</artifactId>
         <version>${hono-client.version}</version>
      </dependency>
      <dependency>
         <groupId>ch.qos.logback</groupId>
         <artifactId>logback-classic</artifactId>
      </dependency>
      <dependency>
         <groupId>io.vertx</groupId>
         <artifactId>vertx-unit</artifactId>
      </dependency>
   </dependencies>

   <profiles>
      <profile>
         <id>run-tests</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>io.fabric8</groupId>
                  <artifactId>docker-maven-plugin</artifactId>
                  <version>0.15.0</version>
                  <configuration>
                     <verbose>true</verbose>
                     <images>
                        <!-- ##### volume container with hono server configuration ##### -->
                        <image>
                           <alias>test-config</alias>
                           <name>hono/test-config:${project.version}</name>
                           <build>
                              <from>tianon/true</from>
                              <tags>
                                 <tag>${project.version}</tag>
                              </tags>
                              <volumes>
                                 <volume>/config</volume>
                              </volumes>
                              <assembly>
                                 <mode>dir</mode>
                                 <basedir>/config</basedir>
                                 <inline>
                                    <id>config</id>
                                    <fileSets>
                                       <fileSet>
                                          <directory>${project.basedir}/src/test/resources/config</directory>
                                          <outputDirectory>/</outputDirectory>
                                          <includes>
                                             <include>**/*</include>
                                          </includes>
                                       </fileSet>
                                    </fileSets>
                                 </inline>
                              </assembly>
                           </build>
                           <run>
                           </run>
                        </image>
                        <!-- ##### Qpid Dispatch Router ##### -->
                        <image>
                           <alias>qdrouter</alias>
                           <name>gordons/qpid-dispatch:${qpid-dispatch.version}</name>
                           <run>
                              <ports>
                                 <port>qpid.amqp.port:5672</port>
                              </ports>
                              <log>
                                 <prefix>QPID</prefix>
                                 <color>blue</color>
                              </log>
                           </run>
                        </image>
                        <!-- ##### Hono server ##### -->
                        <image>
                           <alias>hono-server</alias>
                           <name>hono/server:${hono-server.version}</name>
                           <run>
                              <ports>
                                 <port>+hono.ip:hono.amqp.port:5672</port>
                              </ports>
                              <links>
                                 <link>qdrouter</link>
                              </links>
                              <log>
                                 <prefix>HONO</prefix>
                                 <color>green</color>
                              </log>
                              <volumes>
                                 <!--<bind>-->
                                 <!-- this is not working on windows machine... have to use volume container -->
                                 <!--<volume>${project.basedir}/src/test/resources/config:/config</volume>-->
                                 <!--</bind>-->
                                 <from>
                                    <image>test-config</image>
                                 </from>
                              </volumes>
                           </run>
                        </image>
                     </images>
                  </configuration>
                  <executions>
                     <execution>
                        <id>start-docker</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                           <goal>start</goal>
                        </goals>
                     </execution>
                     <execution>
                        <id>stop-docker</id>
                        <phase>post-integration-test</phase>
                        <goals>
                           <goal>stop</goal>
                           <goal>remove</goal>
                        </goals>
                        <configuration>
                           <removeVolumes>true</removeVolumes>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration>
                     <skip>true</skip>
                  </configuration>
               </plugin>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-failsafe-plugin</artifactId>
                  <configuration>
                     <systemProperties>
                        <hono.host>${hono.ip}</hono.host>
                        <hono.amqp.port>${hono.amqp.port}</hono.amqp.port>
                        <qpid.host>${hono.ip}</qpid.host>
                        <qpid.amqp.port>${qpid.amqp.port}</qpid.amqp.port>
                     </systemProperties>
                     <includes>
                        <include>**/IT*.java</include>
                        <include>**/*IT.java</include>
                     </includes>
                  </configuration>
                  <executions>
                     <execution>
                        <id>run-integration-tests</id>
                        <phase>integration-test</phase>
                        <goals>
                           <goal>integration-test</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>

</project>